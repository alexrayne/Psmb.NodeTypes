prototype(Psmb.NodeTypes:ImageUri) < prototype(Neos.Fusion:Case) {
	image {
		condition = ${asset}
		renderer = ImageUri {
			asset = ${asset}
			width = ${width}
			height = ${height}
			maximumWidth = ${maximumWidth}
			maximumHeight = ${maximumHeight}
			allowCropping = ${allowCropping}
			allowUpscaling = ${allowUpscaling}
		}
	}
	dummyImage {
		condition = ${site.context.inBackend}
		renderer = Neos.Fusion:ResourceUri {
			path = 'resource://Neos.Neos/Public/Images/dummy-image.svg'
		}
	}
}



prototype(Psmb.NodeTypes:Text) < prototype(Neos.Fusion:Tag) {
	attributes.class = 'Text'
	content = Neos.Fusion:Tag {
		content = ${q(node).property('text')}
		@process.contentElementEditable = ContentElementEditable {
			property = 'text'
		}
	}
	@process.contentElementWrapping = ContentElementWrapping
}
prototype(Psmb.NodeTypes:Headline) < prototype(Neos.Fusion:Tag) {
	attributes.class = 'Headline'
	content = Neos.Fusion:Tag {
		content = ${q(node).property('text')}
		@process.contentElementEditable = ContentElementEditable {
			property = 'text'
		}
	}
	@process.contentElementWrapping = ContentElementWrapping
}
prototype(Psmb.NodeTypes:Lead) < prototype(Neos.Fusion:Tag) {
	attributes.class = 'Lead'
	content = Neos.Fusion:Tag {
		content = ${q(node).property('text')}
		@process.contentElementEditable = ContentElementEditable {
			property = 'text'
		}
	}
	@process.contentElementWrapping = ContentElementWrapping
}
prototype(Psmb.NodeTypes:Blockquote) < prototype(Neos.Fusion:Tag) {
	tagName = 'blockquote'
	attributes.class = 'Blockquote'
	content = Neos.Fusion:Tag {
		content = ${q(node).property('text')}
		@process.contentElementEditable = ContentElementEditable {
			property = 'text'
		}
	}
	@process.contentElementWrapping = ContentElementWrapping
}
prototype(Psmb.NodeTypes:Section) < prototype(Neos.Fusion:Tag) {
	tagName = 'section'
	attributes.class = 'Section'
	content = Neos.Fusion:Tag {
		content = ${q(node).property('text')}
		@process.contentElementEditable = ContentElementEditable {
			property = 'text'
		}
	}
	@process.contentElementWrapping = ContentElementWrapping
}
prototype(Psmb.NodeTypes:Aside) < prototype(Neos.Fusion:Tag) {
	tagName = 'aside'
	attributes.class = 'Aside'
	content = Neos.Fusion:Tag {
		content = ${q(node).property('text')}
		@process.contentElementEditable = ContentElementEditable {
			property = 'text'
		}
	}
	@process.contentElementWrapping = ContentElementWrapping
}
prototype(Psmb.NodeTypes:Small) < prototype(Neos.Fusion:Tag) {
	attributes.class = 'Small'
	content = Neos.Fusion:Tag {
		content = ${q(node).property('text')}
		@process.contentElementEditable = ContentElementEditable {
			property = 'text'
		}
	}
	@process.contentElementWrapping = ContentElementWrapping
}
prototype(Psmb.NodeTypes:Epigraph) < prototype(Neos.Fusion:Tag) {
	attributes.class = 'Epigraph'
	content = Neos.Fusion:Tag {
		content = ${q(node).property('text')}
		@process.contentElementEditable = ContentElementEditable {
			property = 'text'
		}
	}
	@process.contentElementWrapping = ContentElementWrapping
}
prototype(Psmb.NodeTypes:Image) < prototype(Neos.Fusion:Tag) {
	tagName = 'figure'
	content = Neos.Fusion:Array {
		image = Neos.Fusion:Tag {
			tagName = 'img'
			attributes.alt = ${q(node).property('alt') || q(node).property('caption')}
			attributes.src = Psmb.NodeTypes:ImageUri {
				@context.asset = ${q(node).property('image')}
				@context.maximumWidth = 900
			}
		}
		caption = Neos.Fusion:Tag {
			tagName = 'figcaption'
			content = ${q(node).property('caption')}
			@if.captionIsSet = ${q(node).property('caption') ? true : false}
		}
	}
	@process.contentElementWrapping = ContentElementWrapping
}
prototype(Psmb.NodeTypes:Asset) < prototype(Neos.Fusion:Tag) {
	tagName = 'a'
	attributes.href = ${'asset://' + node.properties.asset.identifier}
	attributes.href.@process.convertUris = ConvertUris
	content = ${q(node).property('title')}
	@process.wrap = ${'<div>' + value + '</div>'}
	@process.contentElementWrapping = ContentElementWrapping
}

prototype(Psmb.NodeTypes:ContainerOverImage) < prototype(Neos.Fusion:Tag) {
	@context.imageUri = ImageUri {
		asset = ${q(node).property('image')}
		maximumWidth = 1600
	}
	attributes.class = 'ContainerOverImage'
	attributes.style = ${'background-image: url(' + imageUri + ')'}
	content = ContentCollectionRenderer {
		@process.tmpl = ${'<div class="ContainerOverImage-inner">' + value + '</div>'}
		@process.contentElementWrapping = ContentElementWrapping
	}
}

prototype(Psmb.NodeTypes:Container) < prototype(Neos.Fusion:Tag) {
	attributes.class = ${'Container ' + node.properties.class}
	attributes.id = ${node.properties.navTitle}
	content = ContentCollectionRenderer {
		@process.contentElementWrapping = ContentElementWrapping
	}
}

prototype(Psmb.NodeTypes:Html) < prototype(Neos.Fusion:Tag) {
	attributes.class = 'Html'
	content = ${node.properties.source}
	@process.contentElementWrapping = ContentElementWrapping
}
